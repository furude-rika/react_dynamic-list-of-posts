{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/PostDetails/PostDetails.jsx","api/posts.js","App.jsx","index.js"],"names":["PostsList","posts","postId","onPostIdSelect","onPostClose","className","map","post","key","id","userId","title","type","onClick","defaultProps","NewCommentForm","addComment","useState","userName","setUserName","email","setEmail","body","setBody","onSubmit","event","preventDefault","name","value","required","placeholder","onChange","target","trim","API_URL","getPostComments","a","fetch","response","json","result","data","filter","comment","deleteComment","commentId","method","JSON","stringify","PostDetails","comments","setPostComments","visibleComments","setVisibleComments","useEffect","then","length","getUserPosts","getPostDetails","App","setUserId","setPosts","setPostId","setPost","selectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0c56e66.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, postId, onPostIdSelect, onPostClose }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      {posts.map(post => (\n        <li\n          key={post.id}\n          className=\"PostsList__item\"\n        >\n          <div>\n            <b>\n              {`[User #${post.userId}]:`}\n            </b>\n            {post.title}\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => {\n              if (post.id !== postId) {\n                onPostIdSelect(post.id);\n              } else {\n                onPostClose();\n              }\n            }}\n          >\n            {(post.id !== postId) ? 'Open' : 'Close'}\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  postId: PropTypes.number.isRequired,\n  onPostIdSelect: PropTypes.func.isRequired,\n  onPostClose: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  posts: [],\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [userName, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={userName}\n          required\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => {\n            setUserName(event.target.value.trim());\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          required\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => {\n            setEmail(event.target.value.trim());\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={body}\n          required\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => {\n            setBody(event.target.value.trim());\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n        onClick={() => {\n          if (body && userName && email) {\n            addComment(postId, userName, email, body);\n\n            setUserName('');\n            setEmail('');\n            setBody('');\n          }\n        }}\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport const getPostComments = async(postId) => {\n  const response = await fetch(`${API_URL}/comments`);\n  const result = await response.json();\n\n  return result.data.filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async(commentId) => {\n  const response = await fetch(\n    `${API_URL}/comments/${commentId}`, { method: 'DELETE' },\n  );\n  const result = await response.json();\n\n  return result.data;\n};\n\nexport const addComment = async(postId, name, email, body) => {\n  const response = await fetch(`${API_URL}/comments/`,\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        postId,\n        name,\n        email,\n        body,\n      }),\n    });\n\n  const result = await response.json();\n\n  return result.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, deleteComment, addComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ post }) => {\n  const [comments, setPostComments] = useState([]);\n  const [visibleComments, setVisibleComments] = useState(true);\n\n  useEffect(() => {\n    getPostComments(post.id)\n      .then(setPostComments);\n  }, [post.id]);\n\n  const changeCommentsVisibility = () => {\n    setVisibleComments(!visibleComments);\n  };\n\n  const onCommentDelete = (commentId) => {\n    deleteComment(commentId)\n      .then(() => {\n        getPostComments(post.id)\n          .then(setPostComments);\n      });\n  };\n\n  const onCommentAdd = (postId, name, body, email) => {\n    addComment(postId, name, body, email)\n      .then(() => {\n        getPostComments(post.id)\n          .then(setPostComments);\n      });\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button PostDetails__button\"\n            onClick={() => {\n              changeCommentsVisibility();\n            }}\n          >\n            {visibleComments ? `Hide ` : `Show `}\n            {`${comments.length}\n              ${comments.length > 1 ? 'comments' : 'comment'}`}\n          </button>\n        )}\n\n        {visibleComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    onCommentDelete(comment.id);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={post.id}\n            addComment={onCommentAdd}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  }),\n};\n\nPostDetails.defaultProps = {\n  post: {},\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport const getUserPosts = async(userId) => {\n  const response = await fetch(`${API_URL}/posts`);\n\n  const result = await response.json();\n\n  if (userId) {\n    return result.data.filter(post => post.userId === userId);\n  }\n\n  return result.data;\n};\n\nexport const getPostDetails = async(postId) => {\n  const response = await fetch(`${API_URL}/posts/${postId}`);\n  const result = await response.json();\n\n  return result.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails } from './api/posts';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(0);\n  const [post, setPost] = useState(null);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(setPosts);\n  }, [userId]);\n\n  const setSelectedPostId = (selectedPostId) => {\n    setPostId(selectedPostId);\n\n    getPostDetails(selectedPostId)\n      .then(setPost);\n  };\n\n  const setPostClosing = () => {\n    setPostId(null);\n    setPost(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            name=\"select\"\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            postId={postId}\n            onPostIdSelect={setSelectedPostId}\n            onPostClose={setPostClosing}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {post && (\n            <PostDetails post={post} />\n          )}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}